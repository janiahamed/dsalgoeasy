/*
A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all 
non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.
Given a string s, return true if it is a palindrome, or false otherwise.
*/
/*
Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.

Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.

Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.
*/

/* C */
bool isPalindrome(char * s){
    int start = 0;
    int end = strlen(s);
    while (start < end) {
        if (!isalnum(s[start])) {
            start++;
            continue;
        }
        if (!isalnum(s[end])) {
            end--;
            continue;
        }
        if (tolower(s[start]) != tolower(s[end])) return false;
        else {
            start++;
            end--;
        }
    }
    return true;
}

/* JAVA */
class Solution {
    public boolean isPalindrome(String s) {
        int i = 0;
        int j = s.length()-1;
        while (i < s.length() && j > 0) {
            if ((Character.toLowerCase(s.charAt(i))) == (Character.toLowerCase(s.charAt(j)))) {
                i++;
                j--;
            }
            else {
                if(!Character.isLetterOrDigit(s.charAt(i))) {
                    i++;
                }
                else if (!Character.isLetterOrDigit(s.charAt(j))) {
                    j--;
                }
                else {
                    return false;
                }
            }
        }
        return true;
    }
}
