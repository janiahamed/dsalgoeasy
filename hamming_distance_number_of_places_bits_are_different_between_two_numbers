/*
The Hamming distance between two integers is the number of positions at which the corresponding bits are different.
Given two integers x and y, return the Hamming distance between them.
*/
/*
Input: x = 1, y = 4
Output: 2
Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑
The above arrows point to positions where the corresponding bits are different.

Input: x = 3, y = 1
Output: 1
*/

/* C */
int hammingDistance(int x, int y){
    int result = x ^ y;
    int count = 0;
    while (result != 0) {
        result = result & (result-1);
        count++;
    }
    return count;
}

/* JAVA */
class Solution {
    public int hammingDistance(int x, int y) {
        int count = 0;
        for (int i = 0; i < 32; i++) {
            if ((x & 1) != (y & 1)) count++;
            
            x >>= 1;
            y >>= 1;
        }
        return count;
    }
}
