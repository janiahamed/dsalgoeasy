/*
Given two strings s and t, return true if t is an anagram of s, and false otherwise.
An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.
*/

/*
Input: s = "anagram", t = "nagaram"
Output: true

Input: s = "rat", t = "car"
Output: false
*/

/* C */
bool isAnagram(char * s, char * t){
    int count_map[26] = {0};
    int i = 0;
    if (strlen(s)!=strlen(t)) return false;
    for(i = 0; i < strlen(s); i++) {
        count_map[s[i]-'a']++;
        count_map[t[i]-'a']--;
    }
    for(i = 0; i < 26; i++) {
        if (count_map[i] != 0) return false;
    }
    return true;
}

/* JAVA */
class Solution {
    public boolean isAnagram(String s, String t) {
        int  i = 0;
        int count_map[] = new int[26];
        if (s.length() != t.length()) return false;
        for (i = 0; i < s.length(); i++) {
            count_map[s.charAt(i)-'a']++;
            count_map[t.charAt(i)-'a']--;
        }
        for (i = 0; i < 26; i++) {
            if (count_map[i] > 0 || count_map[i] < 0) return false;
        }
        return true;
    }
}
